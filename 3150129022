####黄金分割法####
function golden_search(f,l0,r0,e)
    if l0 < r0
        l = l0
        r = r0
     else
          if l0 > r0
            l = r0
            r = l0
          else
            println("ERROR: l0 == r0, 0-widtn range")
          end
    end
    n=ceil(log((e/abs(r0-l0)))/log(0.61803))
    for i=1:n
        r1=(r-l)*0.61803
        l1=(r-l)*(1-0.61803)
        if f(r1)<f(l1)
            l=l1
        else
            r=r1
        end
    end
    return l,r
end


golden_search(x->x^4-14*x^3+60*x^2-70*x,0,2,0.001)

Answer：(0.3416413467798549, 1.23606)

####斐波那契####
function Fibonacci_search(f,l0,r0,e)
    threshold = abs(r0-l0)/e
    println(threshold)
    fib=[1,2]
    n=3  
    current=fib[n-1]+fib[n-2]  
    while current<threshold  
       push!(fib,current)  
       n+=1  
       current=fib[n-1]+fib[n-2]  
    end
    push!(fib,current)
    
    if l0 < r0
        l = l0
        r = r0
     else
          if l0 > r0
            l = r0
            r = l0
          else
            println("ERROR: l0 == r0, 0-widtn range")
          end
    end
    p=0
    
     for i=1:(n-1)
        p=1-fib[n-i]/fib[n-i+1]
        l1=l+p*(r-l)
        r1=l+(1-p)*(r-l)
        fl1=f(l1)
        fr1=f(r1)
        if fl1<fr1
            r=r1
        else
            l=l1
        end
    end
    return l,r,n,p
end

Fibonacci_search(x->x^4-14*x^3+60*x^2-70*x,0,2,0.3)

Answer：
6.666666666666667
(0.75, 1.0, 5, 0.5)
