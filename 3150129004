#########二分法
function binary_search(f,g,l0,r0,ϵ=0.001)
    n=ceil(log(abs(r0-l0)/ϵ)/log(2)) 
    l=l0
    r=r0
    m=(l0+r0)*0.5
    for i=1:n
        gm=g(m)
        if abs(gm)<10E-15
            return m,f(m)
        else
            if gm<0
                 l=m
            else r=m
            end
        end
          m=(l+r)*0.5
    end
    return m,f(m)
end

binary_search(x->x^2,x->2*x,-1,1,0.01)
结果：(0.0, 0.0)

#####黄金分割
function golden_Search(f,l0,r0,ϵ=0.01)
    n = ceil(log(ϵ/abs(l0-r0))/log(0.618))
    if l0<r0
        l = l0
        r = r0
    else
        if l0>r0
            l = r0
            r = l0
        else
            println("ERROR!")
        end
    end
    
    for i=1:n
        l1=l+0.382(r-l)
        r1=l+0.618(r-l)
        fl1=f(l1)
        fr1=f(r1)
        if fl1<fr1
            r=r1
        else
            l=l1
        end
    end
    return l,r
end

golden_Search(x->x^4-14*x^3+60*x^2-70*x,0,2,0.3)
结果：(0.652478180448, 0.944210064)

########菲波那切数列法
function fibonacci(f,l0,r0,ϵ=0.3)
    if l0<r0
        l = l0
        r = r0
    else
        if l0>r0
            l = r0
            r = l0
        else
            println("ERROR!")
        end
    end
    p=0
    threshold=abs(r0-l0)/ϵ
    fib=[1,2]
    n=3
    current=fib[n-1]+fib[n-2]
    while current<threshold
        push!(fib,current)
        n+=1
        current=fib[n-1]+fib[n-2]
    end
    push!(fib,current)
   
    for i=1:(n-1)
        p=1-fib[n-i]/fib[n-i+1]
        l1=l+p*(r-l)
        r1=l+(1-p)*(r-l)
        fl1=f(l1)
        fr1=f(r1)
        
        if fl1<fr1
            r=r1
        else
            l=l1
        end
    end
    return l,r,n,p
end

fibonacci(x->x^4-14*x^3+60*x^2-70*x,0,2,0.3)
结果：(0.75, 1.0, 5, 0.5)
