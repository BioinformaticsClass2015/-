# 1 #     binary_search         #############################
function binary_search( f, g, l0, r0, e)
    n=ceil(log(abs(r0-l0)/e)/log(2))
    if(l0<r0)
        l=l0
        r=r0
    else
        if(l0>r0)
            l=r0
            r=l0
        else
            println("ERROR:l0==r0")
        end
    end
    m=(l+r)*0.5
    for i=1:n
                gm=g(m)
                println("l=$l,r=$r,m=$m,g=$gm")
            if abs(gm)<10E-15
                    return m,f(m)
                else
                    if gm<0
                        l=m
                    else
                        r=m
                    end
                end
        m=(l+r)*0.5
        end
    return m,f(m)
end

binary_search( x->x^2, x->2x, -1, 2, 0.01)
result：
l=-1,r=2,m=0.5,g=1.0
l=-1,r=0.5,m=-0.25,g=-0.5
l=-0.25,r=0.5,m=0.125,g=0.25
l=-0.25,r=0.125,m=-0.0625,g=-0.125
l=-0.0625,r=0.125,m=0.03125,g=0.0625
l=-0.0625,r=0.03125,m=-0.015625,g=-0.03125
l=-0.015625,r=0.03125,m=0.0078125,g=0.015625
l=-0.015625,r=0.0078125,m=-0.00390625,g=-0.0078125
l=-0.00390625,r=0.0078125,m=0.001953125,g=0.00390625
Out[9]:
(-0.0009765625, 9.5367431640625e-7)


# 2 #     Golden_section_1         #############################
function Golden_section_1( f,l0, r0, m)
    p=0.382
    n=ceil((log(m/2))/log(1-p))
    println("n=$n")
    if(l0<r0)
        l=l0
        r=r0
    else
        if(l0>r0)
            l=r0
            r=l0
        else
            println("ERROR:l0==r0")
        end
    end
    for i=1:n
        a=l+(1-0.61803)*(r-l)
        b=l+0.61803*(r-l)
        fa=f(a)
        fb=f(b)
        println("fa=$fa,fb=$fb")
                

            if f(a)<f(b)
                    r=b
            println("l=$l,r=$r")
                else
                    l=a
             println("l=$l,r=$r")
                    end
                end
    
        end

Golden_section_1(x->x^4-14x^3+60x^2-70x,0,2,0.3)
result
n=4.0
fa=-24.36068819506916,fb=-18.958333871649486
l=0,r=1.23606
fa=-21.098556456146774,fb=-24.360669361724966
l=0.4721378382,r=1.23606
fa=-24.360681003656598,fb=-23.592528851993258
l=0.4721378382,r=0.944264651857254
fa=-23.8374376392128,fb=-24.360673809494997
l=0.6524761172126613,r=0.944264651857254


# 2 #     Golden_section_2         #############################
function Golden_section_2( f,l0, r0, m)
    p=0.382
    N=ceil((log(m/2))/log(1-p))#
println("N=$N")
    z=Dict("x"=>l0,"y"=>r0)
    x=pop!(z,"x")
    y=pop!(z,"y")
    a1=x+p*(y-x)
    b1=x+(1-p)*(y-x)
   
    for i=1:N 
         fa1=f(a1)
        fb1=f(b1)
         println("a1=$a1,b1=$b1,fa1=$fa1,fb1=$fb1")
   if f(a1)<f(b1)
        y=b1
            b1=a1
            a1=x+p*(y-x)
            println("x=$x,y=$y")
        else
            x=a1
            a1=b1
            b1=x+(1-p)*(y-x)
            println("x=$x,y=$y")
             end
        end
    end
    
    Golden_section_2(x->7*e^(1-x)+5*log(x),1,5,0.1)
    result:
N=7.0
a1=2.528,b1=3.472,fa1=6.1559265854988805,fb1=6.814564992374411
x=1,y=3.472
a1=1.944304,b1=2.528,fa1=6.047171664389785,fb1=6.1559265854988805
x=1,y=2.528
a1=1.583696,b1=1.944304,fa1=6.203636390931861,fb1=6.047171664389785
x=1.583696,y=2.528
a1=1.944304,b1=2.1672758720000003,fa1=6.047171664389785,fb1=6.0458501143084735
x=1.944304,y=2.528
a1=2.1672758720000003,b1=2.305028128,fa1=6.0458501143084735,fb1=6.073618750337806
x=1.944304,y=2.305028128
a1=2.082100616896,b1=2.1672758720000003,fa1=6.0390668802104885,fb1=6.0458501143084735
x=1.944304,y=2.1672758720000003
a1=2.029479255104,b1=2.082100616896,fa1=6.039246607582442,fb1=6.0390668802104885
x=2.029479255104,y=2.1672758720000003


# 3 #     Fibonacci sequence         #############################
F=(1,2,3,5,8,13,21,34,55,89,144,233,377,610)
function Fibonacci(f,l0,r0,m)

    #0.1
     FN=(1.2*(r0-l0))/m
   j=1
while F[j]<FN
    j=j+1
    end
    N=j-1
    
   if(l0<r0)
        l=l0
        r=r0
    else
        if(l0>r0)
            l=r0
            r=l0
        else
            println("ERROR:l0==r0")
        end
    end
    
     p=1-(F[N]/F[N+1])
    for i=1:N
    a=l+p*(r-l)
        b=l+(1-p)*(r-l)
        fa=f(a)
        fb=f(b)
        println("fa=$fa,fb=$fb")
        if f(a)<f(b)
            r=b
            println("l=$l,r=$r")
                  else
            l=a
            println("l=$l,r=$r")
           
        end
        N=N-1
        p=1-(F[N]/F[N+1])
         end
    end
    
    Fibonacci(x->x^4-14x^3+60x^2-70x,0,2,0.3)
    result:
fa=-24.33984375,fb=-18.65234375
l=0,r=1.25
fa=-21.6875,fb=-24.33984375
l=0.5,r=1.25
fa=-24.33984375,fb=-23.0
l=0.5,r=1.0
fa=-24.33984375,fb=-24.33984375
l=0.75,r=1.0


# 4 #     Method of Fluxions         #############################
##注意：求解极小点时，f(x)原函数;;;求解方程根的时候g(x)是一阶导【即f(x)一阶导就是g(x)】
function Fluxions(f,ff,x0,m) #
 println("x0=$x0")

  x1=x0-(f(x0)/ff(x0))
println("x1=$x1")

    while abs(x1-x0)>=m
      x0=x1
      x1=x0-(f(x0)/ff(x0))
        println("x1=$x1")
   end
    fx=f(x1)
    ffx=ff(x1)
    if ffx>0    #fx趋近于0    
      println("fx=$fx,ffx=$ffx")
    end
end

Fluxions(x->2x+4sin(x),x->2+4cos(x),0.5,10.0^-5)
result:
x0=0.5
x1=-0.02949678573403014
x1=5.704265657935359e-6
x1=-4.124711639949541e-17
fx=-2.4748269839697246e-16,ffx=6.0

Fluxions(x->x^3-12.2*x^2+7.45x+42,x->3*x^2-24.4*x+7.45,12,0.01) #求解根
result:
x0=12
x1=11.300375042618478
x1=11.201895469742569
x1=11.200000695476783
fx=7.684324012302568e-5,ffx=110.49002976640777


# 4 #    割线法#secant         #############################
function secant(g,xa,xb,m)#####g为一阶导函数，e为精度，xa为第一初始值，xb为第二初始值
    x1=xa
    x2=xb
    x3=(g(x2)*x1-g(x1)*x2)/(g(x2)-g(x1))
    i=1
    
    while(abs(x3-x2)>=m)
       x1=x2
            x2=x3
            x3=(g(x2)*x1-g(x1)*x2)/(g(x2)-g(x1))
         println("x3=$x3 iteration:$i")###输出迭代次数i
    i=i+1         
    end
    return x3
end

secant(x->x^3-12.2*x^2+7.45*x+42,10,12,0.15)
result:
x3=11.172214921539911 iteration:1
x3=11.201088468762656 iteration:2


# 5 #     Method of Fluxions         #############################
